# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = pyscaffoldext-dsproject
description = PyScaffold extension for Data Science projects
author = Florian Wilhelm
author-email = florian.wilhelm@gmail.com
license = MIT
long-description = file: README.md
long-description-content-type = text/markdown
url = https://github.com/pyscaffold/pyscaffoldext-dsproject
# Add here related links, for example:
project-urls =
    Documentation = https://pyscaffold.org/
    Source = https://github.com/pyscaffold/pyscaffoldext-dsproject/
    Tracker = https://github.com/pyscaffold/pyscaffoldext-dsproject/issues
    Download = https://pypi.org/project/PyScaffoldext-dsproject/#files
    Changelog = https://github.com/pyscaffold/pyscaffoldext-dsproject/blob/master/CHANGELOG.rst
    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated)
# TODO: Remove conditional dependencies according to `python_requires` above
install_requires =
    importlib-metadata; python_version<"3.8"
    pyscaffold>=4.0b1,<5.0a0
    pyscaffoldext-markdown>=0.4b2,<1.0a0


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install pyscaffoldext-dsproject[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    tox
    pre-commit
    setuptools_scm
    virtualenv
    configupdater
    pytest
    pytest-cov
    pytest-xdist

[options.entry_points]
pyscaffold.cli =
    dsproject = pyscaffoldext.dsproject.extension:DSProject


[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov pyscaffoldext.dsproject --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
markers =
    slow: mark tests as slow (deselect with '-m "not slow"')
    system: mark end-to-end system tests

[aliases]
dists = sdist bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max-line-length = 88
extend-ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[mypy]
ignore_missing_imports = True
pretty = True
show_error_codes = True
show_error_context = True
show_traceback = True

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0a2
package = dsproject
extensions =
    cirrus
    custom_extension
    markdown
    namespace
    no_skeleton
    pre_commit
namespace = pyscaffoldext
